version: 2.1

defaults: &defaults
  environment:
    - CI_SCRIPTS: "npx --quiet --package @reactioncommerce/ci-scripts@1.9.1"
    - DOCKER_REPOSITORY: "loginsolutions/pb-admin"
    - DOCKER_NAME: "pb-admin"
    - GITOPS_PR_WEBHOOK: "https://w603b5hwp1.execute-api.us-east-1.amazonaws.com/dev/pullrequests"
    - GLOBAL_CACHE_VERSION: “v3”
  docker:
    - image: circleci/node:12-stretch

only-deploy-trunk: &only-deploy-trunk
  filters:
    branches:
      only:
        - trunk

jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - reaction-v3-node-modules-{{ .Branch }}
      - run:
          name: Install yarn dependencies
          command: yarn install --production=false --frozen-lockfile --non-interactive
      - save_cache:
          key: reaction-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - save_cache:
          key: reaction-v3-node-modules-{{ .Branch }}
          paths:
            - node_modules

  # dockerfile-lint:
  #   <<: *defaults
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #         version: 19.03.13
  #     - run:
  #         name: Lint Dockerfiles
  #         command: ${CI_SCRIPTS} lint-dockerfiles

  # eslint:
  #   <<: *defaults
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         keys:
  #           - reaction-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
  #           - reaction-v3-node-modules-{{ .Branch }}
  #     - run:
  #         name: Lint JavaScript
  #         command: yarn run lint

  test-unit:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - reaction-v3-node-modules-{{ .Branch }}
      - run:
          name: Run Unit Tests
          command: yarn run test:ci

  release:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - reaction-v3-node-modules-{{ .Branch }}
      - run:
          name: Push the latest version to npm
          command: yarn run semantic-release

  docker-build-push:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 19.03.13
      - run:
          name: Build and push production Docker image
          command: |
            VERSION=$(git describe --tags `git rev-list --tags --max-count=1` | cut -c2-100)
            docker build -t ${DOCKER_REPOSITORY}:pre-launch .
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker push ${DOCKER_REPOSITORY}:pre-launch

  # create-gitops-pull-request:
  #   <<: *defaults
  #   steps:
  #     - run:
  #         name: Clone reaction-gitops repo and create PR
  #         command: |
  #           ${CI_SCRIPTS} automate-gitops-pull-request
workflows:
  version: 2
  build_and_test:
    jobs:
      - install-dependencies
      # - dockerfile-lint:
      #     requires:
      #       - install-dependencies
      # - eslint:
      #     requires:
      #       - install-dependencies
      - test-unit:
          requires:
            - install-dependencies
      # - release:
      #     context: reaction-publish-semantic-release
      #     filters:
      #       branches:
      #         only:
      #           - trunk
      #     requires:
      #       - test-unit
      - docker-build-push:
          context: reaction-lulis-publish-docker
          <<: *only-deploy-trunk
          requires:
            - install-dependencies
